# https://github.com/kanezi/boot-render-deploy/blob/master/.github/workflows/docker-publish.yml

name: Docker Publish (Spring Boot)

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

permissions:
  contents: read
  packages: write
  security-events: write

env:
  MAVEN_ARGS: -ntp -U -B
  REGISTRY: docker.io

jobs:
  build-with-buildpacks:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Source
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Extract version metadata
        id: version
        run: |
          if [[ "$GITHUB_REF" =~ ^refs/tags/v(.+)$ ]]; then
            VERSION="${BASH_REMATCH[1]}"
          else
            VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          fi
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "Building version: ${VERSION}"

      - name: Set up Java 17
        uses: actions/setup-java@v5
        with:
          java-version: 17
          distribution: 'zulu'
          cache: maven

      - name: Log into Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build Docker image with Spring Boot
        run: |
          VERSION=${{ steps.version.outputs.version }}
          PROJECT_NAME=$(echo $GITHUB_REPOSITORY | cut -d'/' -f2)
          
          # 使用 Spring Boot Maven Plugin 构建镜像
          mvn spring-boot:build-image \
            -DskipTests \
            -Dspring-boot.build-image.imageName=${GITHUB_REPOSITORY}:${VERSION} \
            ${{ env.MAVEN_ARGS }}
          
          echo "Built image: ${GITHUB_REPOSITORY}:${VERSION}"

      - name: Tag and push images
        run: |
          VERSION=${{ steps.version.outputs.version }}
          IMAGE_NAME=${{ github.repository }}
          
          # Docker Hub tags
          docker tag ${IMAGE_NAME}:${VERSION} ${REGISTRY}/${IMAGE_NAME}:${VERSION}
          docker tag ${IMAGE_NAME}:${VERSION} ${REGISTRY}/${IMAGE_NAME}:latest
          
          # GitHub Container Registry tags
          docker tag ${IMAGE_NAME}:${VERSION} ghcr.io/${IMAGE_NAME}:${VERSION}
          docker tag ${IMAGE_NAME}:${VERSION} ghcr.io/${IMAGE_NAME}:latest
          
          echo "Pushing images to Docker Hub..."
          docker push ${REGISTRY}/${IMAGE_NAME}:${VERSION}
          docker push ${REGISTRY}/${IMAGE_NAME}:latest
          
          echo "Pushing images to GitHub Container Registry..."
          docker push ghcr.io/${IMAGE_NAME}:${VERSION}
          docker push ghcr.io/${IMAGE_NAME}:latest

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ github.repository }}:latest
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'